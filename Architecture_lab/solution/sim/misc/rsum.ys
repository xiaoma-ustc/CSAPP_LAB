# Recursively sum linked list elements
# Xiaoma

# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp
    call main
    halt

    # Sample linked list
    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:
    irmovq ele1, %rdi
    call rsum_list
    ret

# start in %rdi
rsum_list:
    andq %rdi, %rdi
    je return
    mrmovq (%rdi), %rbx
    mrmovq 8(%rdi), %rdi
    pushq %rbx
    call rsum_list
    popq %rbx
    addq %rbx, %rax
    ret

return:
    irmovq $0, %rax
    ret

#stack starts here and grows to lower addresses
    .pos 0x200
stack:   
     